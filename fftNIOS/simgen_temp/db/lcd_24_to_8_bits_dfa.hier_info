|lcd_24_to_8_bits_dfa
clk => out_empty~reg0.CLK
clk => out_endofpacket~reg0.CLK
clk => out_startofpacket~reg0.CLK
clk => out_data[0]~reg0.CLK
clk => out_data[1]~reg0.CLK
clk => out_data[2]~reg0.CLK
clk => out_data[3]~reg0.CLK
clk => out_data[4]~reg0.CLK
clk => out_data[5]~reg0.CLK
clk => out_data[6]~reg0.CLK
clk => out_data[7]~reg0.CLK
clk => out_valid~reg0.CLK
clk => state_register[0].CLK
clk => state_register[1].CLK
clk => a_empty[0].CLK
clk => a_empty[1].CLK
clk => a_endofpacket.CLK
clk => a_startofpacket.CLK
clk => a_data2[0].CLK
clk => a_data2[1].CLK
clk => a_data2[2].CLK
clk => a_data2[3].CLK
clk => a_data2[4].CLK
clk => a_data2[5].CLK
clk => a_data2[6].CLK
clk => a_data2[7].CLK
clk => a_data1[0].CLK
clk => a_data1[1].CLK
clk => a_data1[2].CLK
clk => a_data1[3].CLK
clk => a_data1[4].CLK
clk => a_data1[5].CLK
clk => a_data1[6].CLK
clk => a_data1[7].CLK
clk => a_data0[0].CLK
clk => a_data0[1].CLK
clk => a_data0[2].CLK
clk => a_data0[3].CLK
clk => a_data0[4].CLK
clk => a_data0[5].CLK
clk => a_data0[6].CLK
clk => a_data0[7].CLK
clk => a_valid.CLK
reset_n => a_empty[0].ACLR
reset_n => a_empty[1].ACLR
reset_n => a_endofpacket.ACLR
reset_n => a_startofpacket.ACLR
reset_n => a_data2[0].ACLR
reset_n => a_data2[1].ACLR
reset_n => a_data2[2].ACLR
reset_n => a_data2[3].ACLR
reset_n => a_data2[4].ACLR
reset_n => a_data2[5].ACLR
reset_n => a_data2[6].ACLR
reset_n => a_data2[7].ACLR
reset_n => a_data1[0].ACLR
reset_n => a_data1[1].ACLR
reset_n => a_data1[2].ACLR
reset_n => a_data1[3].ACLR
reset_n => a_data1[4].ACLR
reset_n => a_data1[5].ACLR
reset_n => a_data1[6].ACLR
reset_n => a_data1[7].ACLR
reset_n => a_data0[0].ACLR
reset_n => a_data0[1].ACLR
reset_n => a_data0[2].ACLR
reset_n => a_data0[3].ACLR
reset_n => a_data0[4].ACLR
reset_n => a_data0[5].ACLR
reset_n => a_data0[6].ACLR
reset_n => a_data0[7].ACLR
reset_n => a_valid.ACLR
reset_n => out_empty~reg0.ACLR
reset_n => out_endofpacket~reg0.ACLR
reset_n => out_startofpacket~reg0.ACLR
reset_n => out_data[0]~reg0.ACLR
reset_n => out_data[1]~reg0.ACLR
reset_n => out_data[2]~reg0.ACLR
reset_n => out_data[3]~reg0.ACLR
reset_n => out_data[4]~reg0.ACLR
reset_n => out_data[5]~reg0.ACLR
reset_n => out_data[6]~reg0.ACLR
reset_n => out_data[7]~reg0.ACLR
reset_n => out_valid~reg0.ACLR
reset_n => state_register[0].ACLR
reset_n => state_register[1].ACLR
in_ready <= in_ready.DB_MAX_OUTPUT_PORT_TYPE
in_valid => a_valid.DATAIN
in_data[0] => a_data2[0].DATAIN
in_data[1] => a_data2[1].DATAIN
in_data[2] => a_data2[2].DATAIN
in_data[3] => a_data2[3].DATAIN
in_data[4] => a_data2[4].DATAIN
in_data[5] => a_data2[5].DATAIN
in_data[6] => a_data2[6].DATAIN
in_data[7] => a_data2[7].DATAIN
in_data[8] => a_data1[0].DATAIN
in_data[9] => a_data1[1].DATAIN
in_data[10] => a_data1[2].DATAIN
in_data[11] => a_data1[3].DATAIN
in_data[12] => a_data1[4].DATAIN
in_data[13] => a_data1[5].DATAIN
in_data[14] => a_data1[6].DATAIN
in_data[15] => a_data1[7].DATAIN
in_data[16] => a_data0[0].DATAIN
in_data[17] => a_data0[1].DATAIN
in_data[18] => a_data0[2].DATAIN
in_data[19] => a_data0[3].DATAIN
in_data[20] => a_data0[4].DATAIN
in_data[21] => a_data0[5].DATAIN
in_data[22] => a_data0[6].DATAIN
in_data[23] => a_data0[7].DATAIN
in_startofpacket => a_startofpacket.DATAIN
in_endofpacket => a_empty.OUTPUTSELECT
in_endofpacket => a_empty.OUTPUTSELECT
in_endofpacket => a_endofpacket.DATAIN
in_empty[0] => a_empty.DATAB
in_empty[1] => a_empty.DATAB
out_ready => always4.IN1
out_valid <= out_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[0] <= out_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[1] <= out_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[2] <= out_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[3] <= out_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[4] <= out_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[5] <= out_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[6] <= out_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_data[7] <= out_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_startofpacket <= out_startofpacket~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_endofpacket <= out_endofpacket~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_empty <= out_empty~reg0.DB_MAX_OUTPUT_PORT_TYPE


